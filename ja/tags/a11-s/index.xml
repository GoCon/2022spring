<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A11-S on Go Conference 2022 Spring</title>
    <link>https://gocon.jp/2022spring/ja/tags/a11-s/</link>
    <description>Recent content in A11-S on Go Conference 2022 Spring</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language><atom:link href="https://gocon.jp/2022spring/ja/tags/a11-s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GoとLambdaを使用した高パフォーマンスでサーバレスなマイクロサービスの開発と運用</title>
      <link>https://gocon.jp/2022spring/ja/sessions/a11-s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gocon.jp/2022spring/ja/sessions/a11-s/</guid>
      <description>2018年にAWSLambda上でgoランタイムが使えるようになってから3年がたちました。他のランタイムに比べてまだまだGoでの実装事例が少なく、Lambdaの開発に採用していいのか、他に比べてパフォマンスは良いのか気になる方がいるのではないでしょうか？実際にSendgridのメール配信のイベント結果をWebhookで収集した時の事例をお話します。</description>
    </item>
    
  </channel>
</rss>
